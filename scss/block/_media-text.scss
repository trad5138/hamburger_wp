@use "../foundation/mixin";
@use "../foundation/palette";
@use "../foundation/color";
@use "../foundation/variable";

/* メディア・テキストエリアの設定*/
.wp-block-media-text {
	direction: ltr;
	display: grid;
	grid-template-columns: 45% 1fr;
	grid-template-rows: auto;
	column-gap: 0.5em;

	@include mixin.mq(tablet) {
        column-gap: 1em;
    }

    @include mixin.mq(pc) {
        column-gap: 2em;
    }
  
	&.has-media-on-the-right {
		grid-template-columns: 1fr 45%;
	}
  	
	.wp-block-media-text__content,
	.wp-block-media-text__media {
		align-self: start;
	}

	&.is-vertically-aligned-top {
		.wp-block-media-text__content,
		.wp-block-media-text__media {
			align-self: start;
	  	}
	}
  
	&.is-vertically-aligned-center {
		.wp-block-media-text__content,
		.wp-block-media-text__media {
			align-self: center;
	  	}
	}
  
	&.is-vertically-aligned-bottom {
		.wp-block-media-text__content,
		.wp-block-media-text__media {
			align-self: end;
	  	}
	}
  
	.wp-block-media-text__media {
		grid-column: 1;
		grid-row: 1;
		margin: 0;
	}
  
	.wp-block-media-text__content {
		direction: ltr;
		grid-column: 2;
		grid-row: 1;
		padding: 0;
		word-break: break-word;
		font-size: variable.$font-size--single-text--sp;
	
		@include mixin.mq(tablet) {
			font-size: variable.$font-size--single-text--tablet;
		}
	
		@include mixin.mq(pc) {
			font-size: variable.$font-size--single-text--pc;
		}    
	}
  
	&.has-media-on-the-right {
		.wp-block-media-text__media {
			grid-column: 2;
			grid-row: 1;
	  	}
  
	  	.wp-block-media-text__content {
			grid-column: 1;
			grid-row: 1;
	  	}
	}
}
  
.wp-block-media-text__media {
	img, video {
		height: auto;
		max-width: unset;
		width: 100%;
		vertical-align: top;
	}
}
  
.wp-block-media-text.is-image-fill .wp-block-media-text__media {
	height: 100%;
	min-height: 250px;
	background-size: cover;
  
	> a {
		display: block;
		height: 100%;
	}
  
	img {
		position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		border: 0;
	}
}
  
  /*
  * Here we here not able to use a mobile first CSS approach.
  * Custom widths are set using inline styles, and on mobile,
  * we need 100% width, so we use important to overwrite the inline style.
  * If the style were set on mobile first, on desktop styles,
  * we would have no way of setting the style again to the inline style.
  */
@media (max-width: 600px) {
	.wp-block-media-text.is-stacked-on-mobile {
		grid-template-columns: 50% 1fr !important;
		grid-template-rows: auto;
  
		.wp-block-media-text__media {
			grid-column: 1;
			grid-row: 1;
	  	}
  
	  	.wp-block-media-text__content {
			grid-column: 2;
			grid-row: 1;
	  	}

		&.has-media-on-the-right {
			grid-template-columns: 1fr 50%;
	  	}
		
	    .wp-block-media-text__content,
	    .wp-block-media-text__media {
			align-self: start;
	  	}
  
	  	&.is-vertically-aligned-top {
			.wp-block-media-text__content,
			.wp-block-media-text__media {
			  align-self: start;
			}
	  	}
	
	  	&.is-vertically-aligned-center {
			.wp-block-media-text__content,
			.wp-block-media-text__media {
		  		align-self: center;
			}
	  	}
	
	  	&.is-vertically-aligned-bottom {
			.wp-block-media-text__content,
			.wp-block-media-text__media {
		  		align-self: end;
			}
	  	}
	
	 	.wp-block-media-text__media {
			grid-column: 1;
			grid-row: 1;
			margin: 0;
	  	}
	
	  	.wp-block-media-text__content {
			direction: ltr;
			grid-column: 2;
			grid-row: 1;
			padding: 0;
			word-break: break-word;
	  	}
	
	  	&.has-media-on-the-right {
			.wp-block-media-text__media {
		  		grid-column: 2;
		  		grid-row: 1;
			}
	
			.wp-block-media-text__content {
		  		grid-column: 1;
		  		grid-row: 1;
			}
	  	}	
	}	
}